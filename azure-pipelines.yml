# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

#trigger:
#- master

#pool:
#  vmImage: 'ubuntu-latest'

stages:
- stage: firstruntar
  displayName: 'Empty cache Tar'
  variables:
    CACHE_PACK: tar
  jobs:
  - template: azure-pipelines-jobs.yml

- stage: firstrunfiles
  displayName: 'Empty Cache Files'
  variables:
    AZP_CACHING_CONTENT_FORMAT: Files
    CACHE_PACK: files
  jobs:
  - template: azure-pipelines-jobs.yml

- stage: secondruntar
  dependsOn: firstruntar
  displayName: 'Cached Tar'
  variables:
    CACHE_PACK: tar
  jobs:
  - template: azure-pipelines-jobs.yml

- stage: secondrunfiles
  dependsOn: firstrunfiles
  displayName: 'Cached Files'
  variables:
    AZP_CACHING_CONTENT_FORMAT: Files
    CACHE_PACK: files
  jobs:
  - template: azure-pipelines-jobs.yml

variables:
  buildConfiguration: 'Release'
  PACKAGES_PATH: $(Pipeline.Workspace)/.nuget/packages
  CACHE_KEY: nuget | $(Agent.OS) | $(Build.BuildId) | $(CACHE_PACK)
  system.debug: true

#steps:
#
#- task: CacheBeta@1
#  inputs:
#    key: $(CACHE_KEY)
#    path: $(PACKAGES_PATH)
#    cacheHitVar: CACHE_RESTORED
#  displayName: 'Cache Nuget'
#  
#- task: DotNetCoreCLI@2
#  inputs:
#    command: 'restore'
#    packagesDirectory: $(PACKAGES_PATH)
#  displayName: 'dotnet restore'
#  condition: ne(variables.CACHE_RESTORED, 'true')
#
#- task: DotNetCoreCLI@2
#  inputs:
#    command: 'build'
#    arguments: --packages $(PACKAGES_PATH)
#  displayName: 'dotnet build $(buildConfiguration)'
#
#- script: ls -l $(PACKAGES_PATH)
